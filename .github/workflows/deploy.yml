name: Deploy to VPS with GitHub Container Registry

# Using personal access token for authentication (PAT)
on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # We'll use a PAT instead of relying on default token permissions
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}  # Using Personal Access Token

      # Lowercase the repo name to match GHCR requirements
      - name: Prepare repo name
        id: repo-name
        run: |
          echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      # Debug step to check file presence
      - name: Debug directory contents
        run: |
          ls -la
          echo "Current working directory: $(pwd)"
          cat Dockerfile

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO_LC }}:latest
          file: ./Dockerfile
          build-args: |
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
            NEXT_PUBLIC_ADMIN_EMAILS=${{ secrets.NEXT_PUBLIC_ADMIN_EMAILS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create deployment directory on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /root/binocolo

      - name: Create docker-compose.yml file
        run: |
          cat > docker-compose.yml <<EOF
          version: '3'
          services:
            app:
              image: ghcr.io/${{ env.REPO_LC }}:latest
              restart: always
              ports:
                - "3000:3000"
              environment:
                - DATABASE_URL=${{ secrets.DATABASE_URL }}
                - CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
                - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
                - NEXT_PUBLIC_ADMIN_EMAILS=${{ secrets.NEXT_PUBLIC_ADMIN_EMAILS }}
                - NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          EOF

      - name: Copy docker-compose.yml to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/root/binocolo"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/binocolo
            
            # Log in to GitHub Container Registry with PAT
            echo ${{ secrets.GH_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            
            # Pull latest image and deploy
            docker compose pull
            docker compose down
            docker compose up -d
            
            # Clean up old images
            docker image prune -f
            
            # Show container status
            docker compose ps
            
            # Show logs (last 20 lines)
            docker compose logs --tail=20

      - name: Deployment status
        run: |
          echo "Deployment completed. Application should be running at http://${{ secrets.VPS_HOST }}:3000" 